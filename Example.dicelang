function Character(name, hp, ac) {
	this.name = if name == null "Default" else name
	this.hp = if hp == null 100 else hp
	println(this.hp)
	this.ac = if ac == null 10 else ac
	
	this.bow_attack = function(number, advantage_count, target) {
		println("hp:")
		println(this)
		if number == null {
			number = 1
		}
		if advantage_count == null {
			advantage_count = 0
		}
		if target == null {
			println("target entity not given")
			return
		}
		let rolls = [] + (number * (advantage_count+1))d20
		let inc = (advantage_count+1)
		if advantage_count < 0 {
			rolls = [] + (number * ((-1 *advantage_count)+1))d20
			inc = (-1 *advantage_count)+1
		}
		let damage = []
		for i = 0 to len(rolls) step inc {
			let did_hit = false
			let disadv_roll = 20
			for j = 0 to inc {
				if (advantage_count >=0 and rolls[i+j] > target["ac"]) {
					did_hit = true
				} else if (advantage_count < 0 and rolls[i+j] < disadv_roll) {
					disadv_roll = rolls[i+j]
				}
			}
			if (advantage_count >=0 and did_hit) {
				damage += 1d6
			} else if (advantage_count < 0 and disadv_roll > target["ac"]) {
				damage += 1d6
			}
		}
		let attack =  ["Bow Attack", rolls, damage, sum(damage)]
		print_attack(attack)
	}
}

function main() {
	let char = Character("TheStonedElephant", 50, 10)
	println("character")
	println(char)
	let char2 = Character()
	char.bow_attack(2, 1, char2)
}


function sum(a) {
	let s = 0
	for i = 0 to len(a) {
		s += a[i]
	}
	return s
}

function print_attack(attack) {
	println(attack[0])
	println("\tattack rolls: ")
	print("\t")
	println(attack[1])
	println("\tdamage_rolls")
	print("\t")
	println(attack[2])
	println("\tdamage")
	print("\t")
	println(attack[3])
}

main()

